#include<stdio.h>
#include<stdlib.h>
#include<strings.h>
#define MAX 10

/////////////////////////////////////////////////
//Elementos da pilha:
typedef struct elementos {
    
	char nome[50];
    int num;
} t_elemento;
/////////////////////////////////////////////////
// Celula da pilha:
typedef struct pilha {
    
	t_elemento vetor[MAX];
    int topo;
} t_pilha;
/////////////////////////////////////////////////
int push (t_pilha *pilha, t_elemento valor){
    if (isCheia(pilha))
        return 0;

    pilha->vetor[++pilha->topo] = valor;

    return 1; 
}
/////////////////////////////////////////////////
t_elemento pop (t_pilha * pilha){
    t_elemento vazio = { "" };

    if (isVazia(pilha))
        return vazio;
    else
        return pilha->vetor[pilha->topo--];
}
/////////////////////////////////////////////////
t_pilha criar (){
    t_pilha pilha;

    pilha.topo = -1;

    return pilha;
}
/////////////////////////////////////////////////
int isVazia(t_pilha * pilha) {
    return (pilha->topo == -1);
}
/////////////////////////////////////////////////
int isCheia(t_pilha * pilha) {
    return (pilha->topo == MAX-1);
}
/////////////////////////////////////////////////
t_elemento getElementoTopo(t_pilha * pilha)
{
    t_elemento vazio = { "" } ;

    if (isVazia(pilha))
        return vazio;
    else
        return pilha->vetor[pilha->topo];
}
/////////////////////////////////////////////////
main (){
}
